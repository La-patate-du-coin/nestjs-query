"use strict";(self.webpackChunknestjs_query=self.webpackChunknestjs_query||[]).push([[55],{2342:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),l=n(6010);const r="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:n},t)}},1125:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),l=n(7294),r=n(6010),o=n(3735),i=n(6550),d=n(4423),u=n(636),p=n(9200);function s(e){return function(e){var t,n;return null!=(t=null==(n=l.Children.map(e,(function(e){if(!e||(0,l.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function m(e){var t=e.values,n=e.children;return(0,l.useMemo)((function(){var e=null!=t?t:s(n);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function c(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function g(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,r=(0,i.k6)(),o=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,d._X)(o),(0,l.useCallback)((function(e){if(o){var t=new URLSearchParams(r.location.search);t.set(o,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[o,r])]}function h(e){var t,n,a,r,o=e.defaultValue,i=e.queryString,d=void 0!==i&&i,u=e.groupId,s=m(e),h=(0,l.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!c({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var l=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:o,tabValues:s})})),y=h[0],k=h[1],T=g({queryString:d,groupId:u}),f=T[0],v=T[1],b=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,p.Nk)(t),a=n[0],r=n[1],[a,(0,l.useCallback)((function(e){t&&r.set(e)}),[t,r])]),N=b[0],I=b[1],C=function(){var e=null!=f?f:N;return c({value:e,tabValues:s})?e:null}();return(0,l.useLayoutEffect)((function(){C&&k(C)}),[C]),{selectedValue:y,selectValue:(0,l.useCallback)((function(e){if(!c({value:e,tabValues:s}))throw new Error("Can't select invalid tab value="+e);k(e),v(e),I(e)}),[v,I,s]),tabValues:s}}var y=n(5730);const k="tabList__CuJ",T="tabItem_LNqP";function f(e){var t=e.className,n=e.block,i=e.selectedValue,d=e.selectValue,u=e.tabValues,p=[],s=(0,o.o5)().blockElementScrollPositionUntilNextRender,m=function(e){var t=e.currentTarget,n=p.indexOf(t),a=u[n].value;a!==i&&(s(t),d(a))},c=function(e){var t,n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":var a,l=p.indexOf(e.currentTarget)+1;n=null!=(a=p[l])?a:p[0];break;case"ArrowLeft":var r,o=p.indexOf(e.currentTarget)-1;n=null!=(r=p[o])?r:p[p.length-1]}null==(t=n)||t.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,o=e.attributes;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:function(e){return p.push(e)},onKeyDown:c,onClick:m},o,{className:(0,r.Z)("tabs__item",T,null==o?void 0:o.className,{"tabs__item--active":i===t})}),null!=n?n:t)})))}function v(e){var t=e.lazy,n=e.children,a=e.selectedValue,r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var o=r.find((function(e){return e.props.value===a}));return o?(0,l.cloneElement)(o,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function b(e){var t=h(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",k)},l.createElement(f,(0,a.Z)({},e,t)),l.createElement(v,(0,a.Z)({},e,t)))}function N(e){var t=(0,y.Z)();return l.createElement(b,(0,a.Z)({key:String(t)},e))}},5204:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>p,metadata:()=>m,toc:()=>g});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),o=n(1125),i=n(2342),d=n(1402),u=["components"],p={title:"Example",sidebar_label:"Example"},s=void 0,m={unversionedId:"introduction/example",id:"introduction/example",title:"Example",description:"Let's create a simple todo-item graphql example.",source:"@site/docs/introduction/example.mdx",sourceDirName:"introduction",slug:"/introduction/example",permalink:"/nestjs-query/docs/introduction/example",draft:!1,editUrl:"https://github.com/La-patate-du-coin/nestjs-query/edit/master/documentation/docs/introduction/example.mdx",tags:[],version:"current",frontMatter:{title:"Example",sidebar_label:"Example"},sidebar:"docs",previous:{title:"Install",permalink:"/nestjs-query/docs/introduction/install"},next:{title:"DTOs",permalink:"/nestjs-query/docs/concepts/dtos"}},c={},g=[{value:"Set up a new nest app",id:"set-up-a-new-nest-app",level:2},{value:"Install Dependencies",id:"install-dependencies",level:2},{value:"Generate the Module",id:"generate-the-module",level:2},{value:"Create the Entity",id:"create-the-entity",level:2},{value:"Create the DTO",id:"create-the-dto",level:2},{value:"Create the create DTO class.",id:"create-the-create-dto-class",level:2},{value:"Wire everything up.",id:"wire-everything-up",level:2},{value:"Running the Example",id:"running-the-example",level:2},{value:"Exploring The GraphQL Endpoint",id:"exploring-the-graphql-endpoint",level:2},{value:"Create a TodoItem",id:"create-a-todoitem",level:3},{value:"Create Multiple TodoItems",id:"create-multiple-todoitems",level:3},{value:"Query For Multiple TodoItems",id:"query-for-multiple-todoitems",level:3},{value:"Query for all todo items",id:"query-for-all-todo-items",level:4},{value:"Query for completed todo items",id:"query-for-completed-todo-items",level:4},{value:"Query For One TodoItem",id:"query-for-one-todoitem",level:3},{value:"Query by id",id:"query-by-id",level:4},{value:"Update a TodoItem",id:"update-a-todoitem",level:3},{value:"Update Multiple TodoItems",id:"update-multiple-todoitems",level:3},{value:"Delete One TodoItem",id:"delete-one-todoitem",level:3},{value:"Delete Many TodoItems",id:"delete-many-todoitems",level:3}],h={toc:g};function y(e){var t=e.components,n=(0,l.Z)(e,u);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Let's create a simple todo-item graphql example."),(0,r.kt)("h2",{id:"set-up-a-new-nest-app"},"Set up a new nest app"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm i -g @nestjs/cli\nnest new nestjs-query-getting-started\n")),(0,r.kt)("h2",{id:"install-dependencies"},"Install Dependencies"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/nestjs-query/docs/introduction/install"},"Install your packages"),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Be sure to install the correct ORM package!")),(0,r.kt)("p",null,"Install extra dependencies for the example."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm i pg apollo-server-express\n")),(0,r.kt)("h2",{id:"generate-the-module"},"Generate the Module"),(0,r.kt)("p",null,"From the root of your project run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npx nest g mo todo-item\n")),(0,r.kt)("h2",{id:"create-the-entity"},"Create the Entity"),(0,r.kt)("p",null,"From the root of your project run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npx nest g cl todo-item.entity todo-item --flat\n")),(0,r.kt)("p",null,"Now lets fill out the entity."),(0,r.kt)("p",null,"Add the following to ",(0,r.kt)("inlineCode",{parentName:"p"},"src/todo-item/todo-item.entity.ts"),"."),(0,r.kt)(o.Z,{defaultValue:"typeorm",groupId:"orm",values:[{label:"TypeOrm",value:"typeorm"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"typeorm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.entity.ts"',title:'"todo-item/todo-item.entity.ts"'},"import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm'\n\n@Entity()\nexport class TodoItemEntity {\n  @PrimaryGeneratedColumn()\n  id!: string\n\n  @Column()\n  title!: string\n\n  @Column()\n  completed!: boolean\n\n  @CreateDateColumn()\n  created!: Date\n\n  @UpdateDateColumn()\n  updated!: Date\n}\n")))),(0,r.kt)("h2",{id:"create-the-dto"},"Create the DTO"),(0,r.kt)("p",null,"The DTO (Data Transfer Object) is used by the resolver to represent incoming requests and outgoing responses."),(0,r.kt)("p",null,"The DTO is where you can:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Define fields that should be rendered by graphql."),(0,r.kt)("li",{parentName:"ul"},"Define fields that should be filterable using the ",(0,r.kt)("inlineCode",{parentName:"li"},"@FilterableField")," decorator."),(0,r.kt)("li",{parentName:"ul"},"Define validation that will be used by mutations.")),(0,r.kt)("p",null,"In this example the DTO and entity are two different classes to clearly demonstrate what is required for ",(0,r.kt)("inlineCode",{parentName:"p"},"graphql")," vs\nthe persistence layer. However, you can combine the two into a single class."),(0,r.kt)("p",null,"From the root of your project run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npx nest g cl todo-item.dto todo-item --flat\n")),(0,r.kt)("p",null,"Now lets fill out the DTO. Add the following to ",(0,r.kt)("inlineCode",{parentName:"p"},"src/todo-item/todo-item.dto.ts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts"',title:'"todo-item/todo-item.dto.ts"'},"import { FilterableField, IDField } from '@la-patate-du-coin/nestjs-query-graphql'\nimport { ObjectType, GraphQLISODateTime, Field, ID } from '@nestjs/graphql'\n\n@ObjectType('TodoItem')\nexport class TodoItemDTO {\n  @IDField(() => ID)\n  id!: number\n\n  @FilterableField()\n  title!: string\n\n  @FilterableField()\n  completed!: boolean\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date\n}\n")),(0,r.kt)("p",null,"Notice the use of ",(0,r.kt)("inlineCode",{parentName:"p"},"@FilterableField")," this will let ",(0,r.kt)("inlineCode",{parentName:"p"},"@la-patate-du-coin/nestjs-query-graphql")," know to allow filtering on the\ncorresponding field. If you just use ",(0,r.kt)("inlineCode",{parentName:"p"},"@Field")," then you will not be able to filter on the corresponding field."),(0,r.kt)("h2",{id:"create-the-create-dto-class"},"Create the create DTO class."),(0,r.kt)("p",null,"From the previously created DTO, ",(0,r.kt)("inlineCode",{parentName:"p"},"@la-patate-du-coin/nestjs-query-graphql")," will automatically create a ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateTodoItem")," graphql type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"input CreateTodoItem {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n}\n")),(0,r.kt)("p",null,"But in our case, the fields ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"created")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"updated")," are actually not\nrequired when creating a ",(0,r.kt)("inlineCode",{parentName:"p"},"TodoItem"),": they will be autogenerated. We only need to\nprovide ",(0,r.kt)("inlineCode",{parentName:"p"},"title")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"completed"),". To create a DTO that does not require these\nfields, we can create a custom create DTO:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npx nest g cl todo-item.create.dto todo-item --flat\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.create.dto.ts"',title:'"todo-item/todo-item.create.dto.ts"'},"import { IsBoolean, IsString } from 'class-validator'\n\n@InputType('CreateTodoItem')\nexport class TodoItemCreateDTO {\n  @IsString()\n  @Field()\n  title!: string\n\n  @IsBoolean()\n  @Field()\n  completed!: boolean\n}\n")),(0,r.kt)("h2",{id:"wire-everything-up"},"Wire everything up."),(0,r.kt)("p",null,"Update the ",(0,r.kt)("inlineCode",{parentName:"p"},"todo-item.module")," to set up the ",(0,r.kt)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule")," and the entities to provide a ",(0,r.kt)("inlineCode",{parentName:"p"},"QueryService"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule")," will automatically create a Resolver that will expose the following ",(0,r.kt)("inlineCode",{parentName:"p"},"queries")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"mutations"),":"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Queries")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"todoItems")," - find multiple ",(0,r.kt)("inlineCode",{parentName:"li"},"TodoItem"),"s."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"todoItem")," - find one ",(0,r.kt)("inlineCode",{parentName:"li"},"TodoItem"),".")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Mutations")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createManyTodoItems")," - create multiple ",(0,r.kt)("inlineCode",{parentName:"li"},"TodoItem"),"s."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createOneTodoItems")," - create one ",(0,r.kt)("inlineCode",{parentName:"li"},"TodoItem"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"updateManyTodoItems")," - update multiple ",(0,r.kt)("inlineCode",{parentName:"li"},"TodoItems"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"updateOneTodoItems")," - update one ",(0,r.kt)("inlineCode",{parentName:"li"},"TodoItem"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deleteManyTodoItems")," - delete multiple ",(0,r.kt)("inlineCode",{parentName:"li"},"TodoItems"),"s."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deleteOneTodoItems")," - delete one ",(0,r.kt)("inlineCode",{parentName:"li"},"TodoItem"),".")),(0,r.kt)(o.Z,{defaultValue:"typeorm",groupId:"orm",values:[{label:"TypeOrm",value:"typeorm"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"typeorm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{10-22}","{10-22}":!0},"import { NestjsQueryGraphQLModule } from '@la-patate-du-coin/nestjs-query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@la-patate-du-coin/nestjs-query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemCreateDTO } from './todo-item.create.dto';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      // import the NestjsQueryTypeOrmModule to register the entity with typeorm\n      // and provide a QueryService\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      // describe the resolvers you want to expose\n      resolvers: [\n        {\n          EntityClass: TodoItemEntity\n          DTOClass: TodoItemDTO,\n          CreateDTOClass: TodoItemCreateDTO,\n        },\n      ],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")))),(0,r.kt)("p",null,"Next update ",(0,r.kt)("inlineCode",{parentName:"p"},"app.module")," to set up your db connection and the ",(0,r.kt)("inlineCode",{parentName:"p"},"graphql")," nest modules."),(0,r.kt)(o.Z,{defaultValue:"typeorm",groupId:"orm",values:[{label:"TypeOrm",value:"typeorm"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"typeorm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { Module } from '@nestjs/common'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { TodoItemModule } from './todo-item/todo-item.module'\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      database: 'gettingstarted',\n      username: 'gettingstarted',\n      autoLoadEntities: true,\n      synchronize: true,\n      logging: true\n    }),\n    GraphQLModule.forRoot<ApolloDriverConfig>({\n      driver: ApolloDriver,\n      // set to true to automatically generate schema\n      autoSchemaFile: true\n    }),\n    TodoItemModule\n  ],\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n")))),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file in the root of the project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dockerfile"},'version: "3"\n\nservices:\n  postgres:\n    image: "postgres:11.5"\n    environment:\n      - "POSTGRES_USER=gettingstarted"\n      - "POSTGRES_DB=gettingstarted"\n    expose:\n      - "5432"\n    ports:\n      - "5432:5432"\n\n\n')),(0,r.kt)("h2",{id:"running-the-example"},"Running the Example"),(0,r.kt)("p",null,"Start the backing services"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose up -d\n")),(0,r.kt)("p",null,"Start the app"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm start\n")),(0,r.kt)("p",null,"Visit http://localhost:3000/graphql where you should see the playground"),(0,r.kt)("img",{alt:"Example playground",src:(0,d.Z)("img/introduction/getting-started-playground.png")}),(0,r.kt)("h2",{id:"exploring-the-graphql-endpoint"},"Exploring The GraphQL Endpoint"),(0,r.kt)("h3",{id:"create-a-todoitem"},"Create a TodoItem"),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  createOneTodoItem(input: { todoItem: { title: "Create One Todo Item", completed: false } }) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n'))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createOneTodoItem": {\n      "id": "1",\n      "title": "Create One Todo Item",\n      "completed": false,\n      "created": "2020-01-01T00:43:16.000Z",\n      "updated": "2020-01-01T00:43:16.000Z"\n    }\n  }\n}\n')))),(0,r.kt)("h3",{id:"create-multiple-todoitems"},"Create Multiple TodoItems"),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  createManyTodoItems(\n    input: {\n      todoItems: [\n        { title: "Create Many Todo Items - 1", completed: false }\n        { title: "Create Many Todo Items - 2", completed: true }\n      ]\n    }\n  ) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n'))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createManyTodoItems": [\n      {\n        "id": "2",\n        "title": "Create Many Todo Items - 1",\n        "completed": false,\n        "created": "2020-01-01T00:49:01.000Z",\n        "updated": "2020-01-01T00:49:01.000Z"\n      },\n      {\n        "id": "3",\n        "title": "Create Many Todo Items - 2",\n        "completed": true,\n        "created": "2020-01-01T00:49:01.000Z",\n        "updated": "2020-01-01T00:49:01.000Z"\n      }\n    ]\n  }\n}\n')))),(0,r.kt)("h3",{id:"query-for-multiple-todoitems"},"Query For Multiple TodoItems"),(0,r.kt)("h4",{id:"query-for-all-todo-items"},"Query for all todo items"),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjI="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-01T00:43:16.000Z",\n            "updated": "2020-01-01T00:43:16.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-01T00:49:01.000Z",\n            "updated": "2020-01-01T00:49:01.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        },\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-01T00:49:01.000Z",\n            "updated": "2020-01-01T00:49:01.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjI="\n        }\n      ]\n    }\n  }\n}\n')))),(0,r.kt)("h4",{id:"query-for-completed-todo-items"},"Query for completed todo items"),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems(filter: { completed: { is: true } }) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjA="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-01T00:49:01.000Z",\n            "updated": "2020-01-01T00:49:01.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        }\n      ]\n    }\n  }\n}\n')))),(0,r.kt)("h3",{id:"query-for-one-todoitem"},"Query For One TodoItem"),(0,r.kt)("h4",{id:"query-by-id"},"Query by id"),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItem(id: 1) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItem": {\n      "id": "1",\n      "title": "Create One Todo Item",\n      "completed": false,\n      "created": "2020-01-13T06:19:17.543Z",\n      "updated": "2020-01-13T06:19:17.543Z"\n    }\n  }\n}\n')))),(0,r.kt)("h3",{id:"update-a-todoitem"},"Update a TodoItem"),(0,r.kt)("p",null,"Lets update the completed ",(0,r.kt)("inlineCode",{parentName:"p"},"TodoItem")," we created earlier to not be completed."),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"mutation {\n  updateOneTodoItem(input: { id: 3, update: { completed: false } }) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "updateOneTodoItem": {\n      "id": "3",\n      "title": "Create Many Todo Items - 2",\n      "completed": false,\n      "created": "2020-01-13T09:19:46.727Z",\n      "updated": "2020-01-13T09:23:37.658Z"\n    }\n  }\n}\n')))),(0,r.kt)("h3",{id:"update-multiple-todoitems"},"Update Multiple TodoItems"),(0,r.kt)("p",null,"Lets update the completed ",(0,r.kt)("inlineCode",{parentName:"p"},"TodoItem")," we created earlier to not be completed."),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"mutation {\n  updateManyTodoItems(input: { filter: { id: { in: [1, 2] } }, update: { completed: true } }) {\n    updatedCount\n  }\n}\n"))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "updateManyTodoItems": {\n      "updatedCount": 2\n    }\n  }\n}\n')))),(0,r.kt)("p",null,"You can check this by running the completed query from above."),(0,r.kt)("h3",{id:"delete-one-todoitem"},"Delete One TodoItem"),(0,r.kt)("p",null,"Lets update delete the first ",(0,r.kt)("inlineCode",{parentName:"p"},"TodoItem"),"."),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"mutation {\n  deleteOneTodoItem(input: { id: 1 }) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "deleteOneTodoItem": {\n      "id": null,\n      "title": "Create One Todo Item",\n      "completed": true,\n      "created": "2020-01-13T09:44:41.176Z",\n      "updated": "2020-01-13T09:44:54.822Z"\n    }\n  }\n}\n')))),(0,r.kt)("h3",{id:"delete-many-todoitems"},"Delete Many TodoItems"),(0,r.kt)("p",null,"Lets update delete the create many todo items ",(0,r.kt)("inlineCode",{parentName:"p"},"TodoItem")," using a filter."),(0,r.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"graphql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  deleteManyTodoItems(input: { filter: { title: { like: "Create Many Todo Items%" } } }) {\n    deletedCount\n  }\n}\n'))),(0,r.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "deleteManyTodoItems": {\n      "deletedCount": 2\n    }\n  }\n}\n')))))}y.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=a.createContext({}),u=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),c=l,g=m["".concat(d,".").concat(c)]||m[c]||s[c]||r;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);